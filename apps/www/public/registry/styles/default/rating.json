{
  "name": "rating",
  "dependencies": [
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "name": "rating.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { LucideIcon, Star } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface RatingItemProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {\n  selectedValue: number\n  Icon?: LucideIcon\n}\n\nconst RatingItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  RatingItemProps\n>(({ className, value, selectedValue, Icon = Star, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      value={value}\n      className={cn(\n        \"aspect-square fill-transparent px-1.5 text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>svg]:stroke-primary\",\n        props[\"aria-readonly\"] && \"pointer-events-none\",\n        selectedValue >= Number(value) && \"[&>svg]:fill-primary\",\n        className\n      )}\n      {...props}\n    >\n      <Icon className=\"size-6 fill-transparent stroke-transparent stroke-[1.5]\" />\n    </RadioGroupPrimitive.Item>\n  )\n})\n\nRatingItem.displayName = RadioGroupPrimitive.Item.displayName\n\ninterface RatingGroupProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root> {\n  Icon?: LucideIcon\n  customLabel?: string\n  ratingSteps?: number\n  readonly?: boolean\n}\n\nconst RatingGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  RatingGroupProps\n>(\n  (\n    {\n      className,\n      Icon,\n      ratingSteps = 5,\n      customLabel,\n      readonly = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [selectedValue, setSelectedValue] = React.useState(\n      Number(props.defaultValue) || 3\n    )\n\n    return (\n      <RadioGroupPrimitive.Root\n        className={cn(\n          \"flex items-center\",\n          props.disabled && \"pointer-events-none\",\n          className\n        )}\n        {...props}\n        ref={ref}\n        aria-readonly={readonly}\n        onValueChange={(value) => {\n          if (readonly) return\n          setSelectedValue(Number(value))\n          props.onValueChange && props.onValueChange(value)\n        }}\n        tabIndex={readonly ? -1 : 0}\n      >\n        {Array.from({ length: ratingSteps }, (_, i) => i + 1).map((value) => (\n          <RatingItem\n            key={value}\n            value={value.toString()}\n            Icon={Icon}\n            selectedValue={selectedValue}\n            aria-readonly={readonly}\n          />\n        ))}\n        <p className={cn(\"ml-2\", !customLabel && \"w-14\")}>\n          {customLabel ? customLabel : `(${selectedValue} / ${ratingSteps})`}\n        </p>\n      </RadioGroupPrimitive.Root>\n    )\n  }\n)\nRatingGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nexport { RatingGroup, RatingItem }\n"
    }
  ],
  "type": "components:ui"
}